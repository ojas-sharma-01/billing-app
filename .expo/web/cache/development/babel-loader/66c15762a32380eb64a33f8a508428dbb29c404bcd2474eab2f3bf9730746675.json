{"ast":null,"code":"import * as React from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport LogBox from \"react-native-web/dist/exports/LogBox\";\nimport HomeScreen from \"./Home.js\";\nimport Prebill from \"./Prebill.js\";\nimport Makebill2 from \"./Makebill2.js\";\nimport LoginScreen from \"./LoginScreen\";\nimport SignupScreen from \"./SignupScreen\";\nimport Retrievebill from \"./Retrievebill.js\";\nimport ViewBill from \"./ViewBill.js\";\nimport Profile from \"./Profile.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Stack = createNativeStackNavigator();\nLogBox.ignoreLogs(['Warning: ...']);\nLogBox.ignoreAllLogs();\nvar users = [{\n  username: 'user1',\n  password: 'password1'\n}, {\n  username: 'user2',\n  password: 'password2'\n}];\nvar MyStack = function MyStack() {\n  return _jsx(NavigationContainer, {\n    children: _jsxs(Stack.Navigator, {\n      initialRouteName: \"Login\",\n      children: [_jsx(Stack.Screen, {\n        name: \"Login\",\n        component: LoginScreen\n      }), _jsx(Stack.Screen, {\n        name: \"Signup\",\n        component: SignupScreen\n      }), _jsx(Stack.Screen, {\n        name: \"HomeScreen\",\n        component: HomeScreen\n      }), _jsx(Stack.Screen, {\n        name: \"Prebill\",\n        component: Prebill\n      }), _jsx(Stack.Screen, {\n        name: \"Makebill2\",\n        component: Makebill2\n      }), _jsx(Stack.Screen, {\n        name: \"Retrievebill\",\n        component: Retrievebill\n      }), _jsx(Stack.Screen, {\n        name: \"ViewBill\",\n        component: ViewBill\n      }), _jsx(Stack.Screen, {\n        name: \"Profile\",\n        component: Profile\n      })]\n    })\n  });\n};\nexport default MyStack;","map":{"version":3,"names":["React","NavigationContainer","createNativeStackNavigator","LogBox","HomeScreen","Prebill","Makebill2","LoginScreen","SignupScreen","Retrievebill","ViewBill","Profile","jsx","_jsx","jsxs","_jsxs","Stack","ignoreLogs","ignoreAllLogs","users","username","password","MyStack","children","Navigator","initialRouteName","Screen","name","component"],"sources":["C:/Users/ojas2/OneDrive/Desktop/sih-cascoders-/App.js"],"sourcesContent":["import * as React from 'react';\nimport {NavigationContainer} from '@react-navigation/native';\nimport {createNativeStackNavigator} from '@react-navigation/native-stack';\n\nimport {LogBox} from 'react-native';\n\n\nimport HomeScreen from './Home.js'\nimport Prebill from './Prebill.js'\nimport Makebill2 from './Makebill2.js'\nimport LoginScreen from './LoginScreen';\nimport SignupScreen from './SignupScreen';\nimport Retrievebill from './Retrievebill.js';\nimport ViewBill from './ViewBill.js';\nimport Profile from './Profile.js';\n\n\nconst Stack = createNativeStackNavigator();\n\nLogBox.ignoreLogs(['Warning: ...']);\nLogBox.ignoreAllLogs();\n\n\nconst users = [\n  { username: 'user1', password: 'password1' },\n  { username: 'user2', password: 'password2' },\n];\n\n\nconst MyStack = () => {\n  return (\n    <NavigationContainer>\n          <Stack.Navigator initialRouteName=\"Login\">\n            <Stack.Screen name=\"Login\" component={LoginScreen} />\n            <Stack.Screen name=\"Signup\" component={SignupScreen} />\n            <Stack.Screen name=\"HomeScreen\" component={HomeScreen} />\n            <Stack.Screen name=\"Prebill\" component={Prebill} />\n            <Stack.Screen name=\"Makebill2\" component={Makebill2} />\n            <Stack.Screen name=\"Retrievebill\" component={Retrievebill} />\n            <Stack.Screen name=\"ViewBill\" component={ViewBill} />\n            <Stack.Screen name=\"Profile\" component={Profile} />\n          </Stack.Navigator>\n        </NavigationContainer>\n  );\n};\n\n\nexport default MyStack;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n//// import { StatusBar } from \"expo-status-bar\";\n//import { useState } from \"react\";\n//import {\n//  KeyboardAvoidingView,\n//  Text,\n//  View,\n//  ScrollView,\n//  TextInput,\n//  TouchableOpacity,\n//  StatusBar,\n//  StyleSheet,\n//  Keyboard,\n//} from \"react-native\";\n//import Todo from \"./components/Todo\";\n//\n//export default function App() {\n//  return(\n//    <View>\n//        <View\n//                style={[\n//                        styles.container,\n//                        {\n//\n//                          flexDirection: 'row',\n//                          backgroundColor:\"blue\",\n//\n//                        },\n//                      ]}>\n//                <View style={{backgroundColor:\"red\",height:\"20px\"}}>\n//                     <Text style={styles.red}>just red</Text>\n//                     <Text style={styles.bigBlue}>just bigBlue</Text>\n//                     <Text style={[styles.bigBlue, styles.red]}>bigBlue, then red</Text>\n//\n//                </View>\n//\n//            </View>\n//\n//        <View>\n//\n//                <text> Government of india</text>\n//        </View>\n//\n//\n//\n//    </View>\n//\n//\n//\n//\n//\n//  )\n//}\n//\n//const styles = StyleSheet.create({\n//  container: {\n//    flex: 1,\n//    paddingTop:150,\n//  },\n//  bigBlue: {\n//      color: 'blue',\n//      fontWeight: 'bold',\n//      fontSize: 30,\n//    },\n//    red: {\n//      color: 'red',\n//    },\n//});\n//\n//\n//\n//\n////const styles = StyleSheet.create({\n////  content: {\n////    backgroundColor: \"#F3F4F6\",\n////    paddingTop: StatusBar.currentHeight,\n////    display: \"flex\",\n////    flexGrow: 1,\n////  },\n////});\n//\n//\n//\n//\n//\n///* const [todo, settodo] = useState();\n//    const [todoItems, settodoItems] = useState([\"hello\", \"todo2\", \"valuye\"]);\n//\n//    const handleAddtodo = () => {\n//      if (todo === null) return;\n//      Keyboard.dismiss();\n//      settodoItems([...todoItems, todo]);\n//      settodo(null);\n//    };\n//\n//    const completetodo = (index) => {\n//      let itemsCopy = [...todoItems];\n//      itemsCopy.splice(index, 1);\n//      settodoItems(itemsCopy);\n//    };\n//    return (\n//      <View style={styles.content}>\n//        <ScrollView\n//          contentContainerStyle={{\n//            flexGrow: 1,\n//          }}\n//          keyboardShouldPersistTaps=\"handled\"\n//        >\n//          <View className=\"py-4\">\n//            <Text className=\"text-2xl\">Today's todos</Text>\n//            <View className=\"mt-5\">\n//              {todoItems.map((item, index) => {\n//                return (\n//                  <TouchableOpacity\n//                    key={index}\n//                    onPress={() => completetodo(index)}\n//                  >\n//                    <Todo key={index} text={item} />\n//                  </TouchableOpacity>\n//                );\n//              })}\n//            </View>\n//          </View>\n//        </ScrollView>\n//\n//        <KeyboardAvoidingView\n//          behavior={Platform.OS === \"ios\" ? \"padding\" : \"height\"}\n//          className=\"absolute bottom-0 space-x-3 py-5 px-3 w-full flex flex-row justify-around items-center\"\n//        >\n//          <TextInput\n//            className=\"flex-grow bg-gray-300 text-black p-4 text-base rounded-lg\"\n//            placeholder={\"Write a todo\"}\n//            value={todo}\n//            onChangeText={(text) => settodo(text)}\n//          />\n//          <TouchableOpacity onPress={() => handleAddtodo()}>\n//            <View className=\"w-12 h-12 flex justify-center items-center rounded-full bg-gray-400\">\n//              <Text className=\"text-3xl\">+</Text>\n//            </View>\n//          </TouchableOpacity>\n//        </KeyboardAvoidingView>\n//      </View>\n//    );\n//    */\n"],"mappings":"AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,SAAQC,mBAAmB,QAAO,0BAA0B;AAC5D,SAAQC,0BAA0B,QAAO,gCAAgC;AAAC,OAAAC,MAAA;AAK1E,OAAOC,UAAU;AACjB,OAAOC,OAAO;AACd,OAAOC,SAAS;AAChB,OAAOC,WAAW;AAClB,OAAOC,YAAY;AACnB,OAAOC,YAAY;AACnB,OAAOC,QAAQ;AACf,OAAOC,OAAO;AAAqB,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAGnC,IAAMC,KAAK,GAAGd,0BAA0B,CAAC,CAAC;AAE1CC,MAAM,CAACc,UAAU,CAAC,CAAC,cAAc,CAAC,CAAC;AACnCd,MAAM,CAACe,aAAa,CAAC,CAAC;AAGtB,IAAMC,KAAK,GAAG,CACZ;EAAEC,QAAQ,EAAE,OAAO;EAAEC,QAAQ,EAAE;AAAY,CAAC,EAC5C;EAAED,QAAQ,EAAE,OAAO;EAAEC,QAAQ,EAAE;AAAY,CAAC,CAC7C;AAGD,IAAMC,OAAO,GAAG,SAAVA,OAAOA,CAAA,EAAS;EACpB,OACET,IAAA,CAACZ,mBAAmB;IAAAsB,QAAA,EACdR,KAAA,CAACC,KAAK,CAACQ,SAAS;MAACC,gBAAgB,EAAC,OAAO;MAAAF,QAAA,GACvCV,IAAA,CAACG,KAAK,CAACU,MAAM;QAACC,IAAI,EAAC,OAAO;QAACC,SAAS,EAAErB;MAAY,CAAE,CAAC,EACrDM,IAAA,CAACG,KAAK,CAACU,MAAM;QAACC,IAAI,EAAC,QAAQ;QAACC,SAAS,EAAEpB;MAAa,CAAE,CAAC,EACvDK,IAAA,CAACG,KAAK,CAACU,MAAM;QAACC,IAAI,EAAC,YAAY;QAACC,SAAS,EAAExB;MAAW,CAAE,CAAC,EACzDS,IAAA,CAACG,KAAK,CAACU,MAAM;QAACC,IAAI,EAAC,SAAS;QAACC,SAAS,EAAEvB;MAAQ,CAAE,CAAC,EACnDQ,IAAA,CAACG,KAAK,CAACU,MAAM;QAACC,IAAI,EAAC,WAAW;QAACC,SAAS,EAAEtB;MAAU,CAAE,CAAC,EACvDO,IAAA,CAACG,KAAK,CAACU,MAAM;QAACC,IAAI,EAAC,cAAc;QAACC,SAAS,EAAEnB;MAAa,CAAE,CAAC,EAC7DI,IAAA,CAACG,KAAK,CAACU,MAAM;QAACC,IAAI,EAAC,UAAU;QAACC,SAAS,EAAElB;MAAS,CAAE,CAAC,EACrDG,IAAA,CAACG,KAAK,CAACU,MAAM;QAACC,IAAI,EAAC,SAAS;QAACC,SAAS,EAAEjB;MAAQ,CAAE,CAAC;IAAA,CACpC;EAAC,CACC,CAAC;AAE9B,CAAC;AAGD,eAAeW,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}