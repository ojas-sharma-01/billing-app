{"ast":null,"code":"import React from 'react';\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Header from \"./components/Header.js\";\nimport Nav from \"./components/Nav.js\";\nimport Subfooter from \"./components/Subfooter.js\";\nimport Footer from \"./components/Footer.js\";\nimport Prebill from \"./Prebill.js\";\nimport Retrievebill from \"./Retrievebill.js\";\nimport { useRoute } from '@react-navigation/native';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Home = function Home(_ref) {\n  var navigation = _ref.navigation;\n  var route = useRoute();\n  var _route$params = route.params,\n    username = _route$params.username,\n    password = _route$params.password;\n  var handleButtonPress = function handleButtonPress(screenName) {\n    navigation.navigate(screenName, {\n      username: username,\n      password: password\n    });\n  };\n  var buttons = [{\n    text: 'My Profile',\n    imageSource: require(\"./assets/user.png\"),\n    screenName: 'Profile'\n  }, {\n    text: 'Create Bill',\n    imageSource: require(\"./assets/invoice.png\"),\n    screenName: 'Prebill'\n  }, {\n    text: 'View your Invoices',\n    imageSource: require(\"./assets/icons8-transaction-history-64.png\"),\n    screenName: 'Retrievebill'\n  }];\n  return _jsx(ScrollView, {\n    children: _jsxs(View, {\n      children: [_jsx(Header, {}), _jsx(Nav, {}), _jsx(View, {\n        style: styles.body,\n        children: _jsx(View, {\n          style: styles.buttonRow,\n          children: buttons.map(function (button, index) {\n            return _jsxs(View, {\n              children: [_jsx(Pressable, {\n                style: function style(_ref2) {\n                  var pressed = _ref2.pressed;\n                  return [styles.button, {\n                    backgroundColor: pressed ? 'lightblue' : '#007AFF',\n                    shadowColor: '#3498DB',\n                    shadowOffset: {\n                      width: 0,\n                      height: 8\n                    },\n                    shadowOpacity: pressed ? 0.8 : 0.5,\n                    shadowRadius: 10,\n                    elevation: pressed ? 12 : 10\n                  }];\n                },\n                onPress: function onPress() {\n                  return handleButtonPress(button.screenName);\n                },\n                children: _jsx(Image, {\n                  source: button.imageSource,\n                  style: styles.buttonImage\n                })\n              }), _jsx(Text, {\n                style: styles.buttonText,\n                children: button.text\n              })]\n            }, index);\n          })\n        })\n      }), _jsx(Subfooter, {}), _jsx(Footer, {})]\n    })\n  });\n};\nvar styles = StyleSheet.create({\n  body: {\n    alignItems: 'center'\n  },\n  bodyText: {\n    fontSize: 20,\n    marginBottom: 20,\n    color: '#2C3E50'\n  },\n  buttonText: {\n    color: 'grey',\n    fontSize: 16,\n    fontWeight: 'bold',\n    textAlign: 'center'\n  },\n  buttonRow: {\n    flexDirection: 'row',\n    justifyContent: 'center',\n    flexWrap: 'wrap',\n    marginBottom: 20\n  },\n  button: {\n    backgroundColor: '#3498DB',\n    height: 130,\n    width: 130,\n    marginLeft: 18,\n    marginTop: 20,\n    marginRight: 17,\n    marginBottom: 20,\n    padding: 30,\n    borderRadius: 80,\n    alignItems: 'center',\n    justifyContent: 'center',\n    shadowColor: '#3498DB',\n    shadowOffset: {\n      width: 0,\n      height: 8\n    },\n    shadowOpacity: 0.5,\n    shadowRadius: 10,\n    elevation: 15\n  },\n  buttonImage: {\n    width: 60,\n    height: 60,\n    marginBottom: 10\n  }\n});\nexport default Home;","map":{"version":3,"names":["React","ScrollView","Text","Pressable","StyleSheet","View","Image","Header","Nav","Subfooter","Footer","Prebill","Retrievebill","useRoute","jsx","_jsx","jsxs","_jsxs","Home","_ref","navigation","route","_route$params","params","username","password","handleButtonPress","screenName","navigate","buttons","text","imageSource","require","children","style","styles","body","buttonRow","map","button","index","_ref2","pressed","backgroundColor","shadowColor","shadowOffset","width","height","shadowOpacity","shadowRadius","elevation","onPress","source","buttonImage","buttonText","create","alignItems","bodyText","fontSize","marginBottom","color","fontWeight","textAlign","flexDirection","justifyContent","flexWrap","marginLeft","marginTop","marginRight","padding","borderRadius"],"sources":["C:/Users/ojas2/OneDrive/Desktop/sih-cascoders-/Home.js"],"sourcesContent":["import React from 'react';\nimport { ScrollView, Text, Pressable, StyleSheet, View, Image } from 'react-native';\n\nimport Header from './components/Header.js';\nimport Nav from './components/Nav.js';\nimport Subfooter from './components/Subfooter.js';\nimport Footer from './components/Footer.js';\nimport Prebill from './Prebill.js';\nimport Retrievebill from './Retrievebill.js';\nimport { useRoute } from '@react-navigation/native';\n\nconst Home = ({ navigation }) => {\n\n  const route = useRoute();\n  const { username, password } = route.params;\n\n  const handleButtonPress = (screenName) => {\n      navigation.navigate(screenName, {username, password});\n  };\n\n\n  const buttons = [\n    {\n      text: 'My Profile',\n      imageSource: require('./assets/user.png'),\n      screenName: 'Profile',\n    },\n    {\n      text: 'Create Bill',\n      imageSource: require('./assets/invoice.png'),\n      screenName: 'Prebill',\n    },\n    {\n      text: 'View your Invoices',\n      imageSource: require('./assets/icons8-transaction-history-64.png'),\n      screenName: 'Retrievebill',\n    },\n  ];\n\n  return (\n    <ScrollView>\n      <View>\n        <Header />\n        <Nav />\n        <View style={styles.body}>\n          {/*<Text style={styles.bodyText}>Welcome! Make your selections below:</Text>*/}\n          <View style={styles.buttonRow}>\n            {buttons.map((button, index) => (\n              <View\n                key={index}>\n                <Pressable\n                style={({ pressed }) => [\n                            styles.button,\n                            {\n                              backgroundColor: pressed ? 'lightblue' : '#007AFF',\n                              shadowColor: '#3498DB',\n                                                 shadowOffset: {\n                                                   width: 0,\n                                                   height: 8,\n                                                 },\n                                                 shadowOpacity: pressed ? 0.8 : 0.5,\n                                                 shadowRadius: 10,\n                                                 elevation: pressed ? 12 : 10,\n                            },\n                          ]}\n                onPress={() => handleButtonPress(button.screenName)}\n              >\n                <Image\n                  source={button.imageSource}\n                  style={styles.buttonImage}\n                /></Pressable>\n                <Text style={styles.buttonText}>{button.text}</Text>\n              </View>\n            ))}\n          </View>\n        </View>\n        <Subfooter />\n        <Footer />\n      </View>\n    </ScrollView>\n  );\n};\n\nconst styles = StyleSheet.create({\n  body: {\n    alignItems: 'center',\n  },\n  bodyText: {\n    fontSize: 20,\n    marginBottom: 20,\n    color: '#2C3E50',\n  },\n  buttonText: {\n    color: 'grey',\n    fontSize: 16,\n    fontWeight: 'bold',\n    textAlign: 'center',\n  },\n buttonRow: {\n     flexDirection: 'row',\n     justifyContent: 'center',\n     flexWrap: 'wrap',\n     marginBottom: 20,\n   },\n   button: {\n     backgroundColor: '#3498DB',\n     height: 130,\n     width: 130,\n     marginLeft: 18,\n     marginTop: 20,\n     marginRight: 17,\n     marginBottom: 20,\n     padding: 30,\n     borderRadius: 80,\n     alignItems: 'center',\n     justifyContent: 'center',\n     shadowColor: '#3498DB',\n     shadowOffset: {\n       width: 0,\n       height: 8,\n     },\n     shadowOpacity: 0.5,\n     shadowRadius: 10,\n     elevation: 15,\n   },\n buttonImage: {\n    width: 60,\n    height: 60,\n    marginBottom: 10,\n  },\n});\n\nexport default Home;\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,OAAAC,UAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,SAAA;AAAA,OAAAC,UAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,KAAA;AAG1B,OAAOC,MAAM;AACb,OAAOC,GAAG;AACV,OAAOC,SAAS;AAChB,OAAOC,MAAM;AACb,OAAOC,OAAO;AACd,OAAOC,YAAY;AACnB,SAASC,QAAQ,QAAQ,0BAA0B;AAAC,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAEpD,IAAMC,IAAI,GAAG,SAAPA,IAAIA,CAAAC,IAAA,EAAuB;EAAA,IAAjBC,UAAU,GAAAD,IAAA,CAAVC,UAAU;EAExB,IAAMC,KAAK,GAAGR,QAAQ,CAAC,CAAC;EACxB,IAAAS,aAAA,GAA+BD,KAAK,CAACE,MAAM;IAAnCC,QAAQ,GAAAF,aAAA,CAARE,QAAQ;IAAEC,QAAQ,GAAAH,aAAA,CAARG,QAAQ;EAE1B,IAAMC,iBAAiB,GAAG,SAApBA,iBAAiBA,CAAIC,UAAU,EAAK;IACtCP,UAAU,CAACQ,QAAQ,CAACD,UAAU,EAAE;MAACH,QAAQ,EAARA,QAAQ;MAAEC,QAAQ,EAARA;IAAQ,CAAC,CAAC;EACzD,CAAC;EAGD,IAAMI,OAAO,GAAG,CACd;IACEC,IAAI,EAAE,YAAY;IAClBC,WAAW,EAAEC,OAAO,oBAAoB,CAAC;IACzCL,UAAU,EAAE;EACd,CAAC,EACD;IACEG,IAAI,EAAE,aAAa;IACnBC,WAAW,EAAEC,OAAO,uBAAuB,CAAC;IAC5CL,UAAU,EAAE;EACd,CAAC,EACD;IACEG,IAAI,EAAE,oBAAoB;IAC1BC,WAAW,EAAEC,OAAO,6CAA6C,CAAC;IAClEL,UAAU,EAAE;EACd,CAAC,CACF;EAED,OACEZ,IAAA,CAACd,UAAU;IAAAgC,QAAA,EACThB,KAAA,CAACZ,IAAI;MAAA4B,QAAA,GACHlB,IAAA,CAACR,MAAM,IAAE,CAAC,EACVQ,IAAA,CAACP,GAAG,IAAE,CAAC,EACPO,IAAA,CAACV,IAAI;QAAC6B,KAAK,EAAEC,MAAM,CAACC,IAAK;QAAAH,QAAA,EAEvBlB,IAAA,CAACV,IAAI;UAAC6B,KAAK,EAAEC,MAAM,CAACE,SAAU;UAAAJ,QAAA,EAC3BJ,OAAO,CAACS,GAAG,CAAC,UAACC,MAAM,EAAEC,KAAK;YAAA,OACzBvB,KAAA,CAACZ,IAAI;cAAA4B,QAAA,GAEHlB,IAAA,CAACZ,SAAS;gBACV+B,KAAK,EAAE,SAAAA,MAAAO,KAAA;kBAAA,IAAGC,OAAO,GAAAD,KAAA,CAAPC,OAAO;kBAAA,OAAO,CACZP,MAAM,CAACI,MAAM,EACb;oBACEI,eAAe,EAAED,OAAO,GAAG,WAAW,GAAG,SAAS;oBAClDE,WAAW,EAAE,SAAS;oBACHC,YAAY,EAAE;sBACZC,KAAK,EAAE,CAAC;sBACRC,MAAM,EAAE;oBACV,CAAC;oBACDC,aAAa,EAAEN,OAAO,GAAG,GAAG,GAAG,GAAG;oBAClCO,YAAY,EAAE,EAAE;oBAChBC,SAAS,EAAER,OAAO,GAAG,EAAE,GAAG;kBAC/C,CAAC,CACF;gBAAA,CAAC;gBACZS,OAAO,EAAE,SAAAA,QAAA;kBAAA,OAAMzB,iBAAiB,CAACa,MAAM,CAACZ,UAAU,CAAC;gBAAA,CAAC;gBAAAM,QAAA,EAEpDlB,IAAA,CAACT,KAAK;kBACJ8C,MAAM,EAAEb,MAAM,CAACR,WAAY;kBAC3BG,KAAK,EAAEC,MAAM,CAACkB;gBAAY,CAC3B;cAAC,CAAW,CAAC,EACdtC,IAAA,CAACb,IAAI;gBAACgC,KAAK,EAAEC,MAAM,CAACmB,UAAW;gBAAArB,QAAA,EAAEM,MAAM,CAACT;cAAI,CAAO,CAAC;YAAA,GAtB/CU,KAuBD,CAAC;UAAA,CACR;QAAC,CACE;MAAC,CACH,CAAC,EACPzB,IAAA,CAACN,SAAS,IAAE,CAAC,EACbM,IAAA,CAACL,MAAM,IAAE,CAAC;IAAA,CACN;EAAC,CACG,CAAC;AAEjB,CAAC;AAED,IAAMyB,MAAM,GAAG/B,UAAU,CAACmD,MAAM,CAAC;EAC/BnB,IAAI,EAAE;IACJoB,UAAU,EAAE;EACd,CAAC;EACDC,QAAQ,EAAE;IACRC,QAAQ,EAAE,EAAE;IACZC,YAAY,EAAE,EAAE;IAChBC,KAAK,EAAE;EACT,CAAC;EACDN,UAAU,EAAE;IACVM,KAAK,EAAE,MAAM;IACbF,QAAQ,EAAE,EAAE;IACZG,UAAU,EAAE,MAAM;IAClBC,SAAS,EAAE;EACb,CAAC;EACFzB,SAAS,EAAE;IACP0B,aAAa,EAAE,KAAK;IACpBC,cAAc,EAAE,QAAQ;IACxBC,QAAQ,EAAE,MAAM;IAChBN,YAAY,EAAE;EAChB,CAAC;EACDpB,MAAM,EAAE;IACNI,eAAe,EAAE,SAAS;IAC1BI,MAAM,EAAE,GAAG;IACXD,KAAK,EAAE,GAAG;IACVoB,UAAU,EAAE,EAAE;IACdC,SAAS,EAAE,EAAE;IACbC,WAAW,EAAE,EAAE;IACfT,YAAY,EAAE,EAAE;IAChBU,OAAO,EAAE,EAAE;IACXC,YAAY,EAAE,EAAE;IAChBd,UAAU,EAAE,QAAQ;IACpBQ,cAAc,EAAE,QAAQ;IACxBpB,WAAW,EAAE,SAAS;IACtBC,YAAY,EAAE;MACZC,KAAK,EAAE,CAAC;MACRC,MAAM,EAAE;IACV,CAAC;IACDC,aAAa,EAAE,GAAG;IAClBC,YAAY,EAAE,EAAE;IAChBC,SAAS,EAAE;EACb,CAAC;EACHG,WAAW,EAAE;IACVP,KAAK,EAAE,EAAE;IACTC,MAAM,EAAE,EAAE;IACVY,YAAY,EAAE;EAChB;AACF,CAAC,CAAC;AAEF,eAAezC,IAAI"},"metadata":{},"sourceType":"module","externalDependencies":[]}